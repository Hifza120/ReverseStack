#include<iostream>
using namespace std;
template<typename T>
class StackADT {
protected:
	T* array;
	int maxSize;
	int currentSize;
public:
	StackADT() {}
	StackADT(int Size) :maxSize(Size), currentSize(0) {
		array = new T[maxSize];
	}
	StackADT(const StackADT<T>& S1)
	{
		currentSize = S1.currentSize;
		maxSize = S1.maxSize;
		array = new T[maxSize];
		for (int i = 0; i < S1.currentSize; i++) {
			array[i] = S1.array[i];
		}

	}

	virtual bool isEmpty() = 0;
	virtual bool isFull() = 0;
	virtual void push(T value) = 0;
	virtual  T pop() = 0;
	virtual T top() const = 0;
	virtual ~StackADT() {
		delete[] array;
		array = nullptr;
	}
};
